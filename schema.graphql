schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Alias {
  alias: String!
  createdAt: AWSDateTime!
  gene: String
  id: String!
  speciesName: String
  updatedAt: AWSDateTime!
}

type Auth {
  createdAt: AWSDateTime!
  id: ID!
  updatedAt: AWSDateTime!
}

type Domain {
  accessionNumber: String
  color: String
  createdAt: AWSDateTime!
  end: String
  gene: ID!
  id: ID!
  identifier: String
  start: String
  type: String
  updatedAt: AWSDateTime!
}

type Fish {
  aa_target: String
  chr: String
  codon: String
  createdAt: AWSDateTime!
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: AWSDateTime!
}

type Fly {
  aa_target: String
  chr: String
  codon: String
  createdAt: AWSDateTime!
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: AWSDateTime!
}

type GeneLollipopGraph {
  createdAt: AWSDateTime!
  domains(filter: ModelDomainFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelDomainConnection
  id: ID!
  lollipopLocations(filter: ModelLollipopLocationsFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelLollipopLocationsConnection
  numberOfAAS: String
  transcriptId: String!
  transcriptId2: String
  updatedAt: AWSDateTime!
}

type GeneLollipopGraphMCF7 {
  createdAt: AWSDateTime!
  domains(filter: ModelDomainFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelDomainConnection
  id: ID!
  lollipopLocations(filter: ModelLollipopLocationsMCF7FilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelLollipopLocationsMCF7Connection
  numberOfAAS: String
  transcriptId: String!
  transcriptId2: String
  updatedAt: AWSDateTime!
}

type HomoSapiens {
  aa_target: String
  cancer_type: String
  chr: String
  codon: String
  createdAt: String
  gene: String!
  genome_coord: String!
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: String
}

type LollipopLocations {
  aachg: String
  aapos: String
  cellLine: String
  clinVar: String
  clinVar_ID: String
  createdAt: AWSDateTime!
  fdrCISP: String
  fdrCPT: String
  fdrDOX: String
  fdrOLAP: String
  fdrUNT: String
  function: String!
  gene: ID!
  id: ID!
  lfcCISP: String
  lfcCPT: String
  lfcDOX: String
  lfcOLAP: String
  lfcUNT: String
  noncanonicalTranscript: String
  pTMsiteLoc: String
  pvalueCISP: String
  pvalueCPT: String
  pvalueDOX: String
  pvalueOLAP: String
  pvalueUNT: String
  sgRNASequence: String
  tCGA: String
  updatedAt: AWSDateTime!
}

type LollipopLocationsMCF7 {
  aachg: String
  aapos: String
  cellLine: String
  clinVar: String
  clinVar_ID: String
  createdAt: AWSDateTime!
  fdrCISP: String
  fdrCPT: String
  fdrDOX: String
  fdrOLAP: String
  fdrUNT: String
  function: String!
  gene: ID!
  id: ID!
  lfcCISP: String
  lfcCPT: String
  lfcDOX: String
  lfcOLAP: String
  lfcUNT: String
  noncanonicalTranscript: String
  pTMsiteLoc: String
  pvalueCISP: String
  pvalueCPT: String
  pvalueDOX: String
  pvalueOLAP: String
  pvalueUNT: String
  sgRNASequence: String
  tCGA: String
  updatedAt: AWSDateTime!
}

type LollipopLocationsMDAMB231 {
  aapos: String
  clinVar: String
  fdrUNT: String
  function: String
  gene: String
  id: ID!
  lfcUNT: String
  nLFC: String
  pvalueUNT: String
  sgRNASequence: String
}

type LollipopLocationsMDAMB231Connection {
  items: [LollipopLocationsMDAMB231]
  nextToken: String
}

type ModelAliasConnection {
  items: [Alias]
  nextToken: String
}

type ModelAuthConnection {
  items: [Auth]
  nextToken: String
}

type ModelDomainConnection {
  items: [Domain]
  nextToken: String
}

type ModelFishConnection {
  items: [Fish]
  nextToken: String
}

type ModelFlyConnection {
  items: [Fly]
  nextToken: String
}

type ModelGeneLollipopGraphConnection {
  items: [GeneLollipopGraph]
  nextToken: String
}

type ModelGeneLollipopGraphMCF7Connection {
  items: [GeneLollipopGraphMCF7]
  nextToken: String
}

type ModelHomoSapiensConnection {
  items: [HomoSapiens]
  nextToken: String
}

type ModelLollipopLocationsConnection {
  items: [LollipopLocations]
  nextToken: String
}

type ModelLollipopLocationsMCF7Connection {
  items: [LollipopLocationsMCF7]
  nextToken: String
}

type ModelMouseConnection {
  items: [Mouse]
  nextToken: String
}

type ModelNematodeConnection {
  items: [Nematode]
  nextToken: String
}

type ModelPlantConnection {
  items: [Plant]
  nextToken: String
}

type ModelRatConnection {
  items: [Rat]
  nextToken: String
}

type ModelYeastConnection {
  items: [Yeast]
  nextToken: String
}

type Mouse {
  aa_target: String
  chr: String
  codon: String
  createdAt: AWSDateTime!
  gene: String
  genome_cord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: AWSDateTime!
}

type Mutation {
  createAlias(condition: ModelAliasConditionInput, input: CreateAliasInput!): Alias
  createAuth(condition: ModelAuthConditionInput, input: CreateAuthInput!): Auth
  createDomain(condition: ModelDomainConditionInput, input: CreateDomainInput!): Domain
  createFish(condition: ModelFishConditionInput, input: CreateFishInput!): Fish
  createFly(condition: ModelFlyConditionInput, input: CreateFlyInput!): Fly
  createGeneLollipopGraph(condition: ModelGeneLollipopGraphConditionInput, input: CreateGeneLollipopGraphInput!): GeneLollipopGraph
  createGeneLollipopGraphMCF7(condition: ModelGeneLollipopGraphMCF7ConditionInput, input: CreateGeneLollipopGraphMCF7Input!): GeneLollipopGraphMCF7
  createHomoSapiens(condition: ModelHomoSapiensConditionInput, input: CreateHomoSapiensInput!): HomoSapiens
  createLollipopLocations(condition: ModelLollipopLocationsConditionInput, input: CreateLollipopLocationsInput!): LollipopLocations
  createLollipopLocationsMCF7(condition: ModelLollipopLocationsMCF7ConditionInput, input: CreateLollipopLocationsMCF7Input!): LollipopLocationsMCF7
  createLollipopLocationsMDAMB231(input: CreateLollipopLocationsMDAMB231Input!): LollipopLocationsMDAMB231
  createMouse(condition: ModelMouseConditionInput, input: CreateMouseInput!): Mouse
  createNematode(condition: ModelNematodeConditionInput, input: CreateNematodeInput!): Nematode
  createPlant(condition: ModelPlantConditionInput, input: CreatePlantInput!): Plant
  createRat(condition: ModelRatConditionInput, input: CreateRatInput!): Rat
  createYeast(condition: ModelYeastConditionInput, input: CreateYeastInput!): Yeast
  deleteAlias(condition: ModelAliasConditionInput, input: DeleteAliasInput!): Alias
  deleteAuth(condition: ModelAuthConditionInput, input: DeleteAuthInput!): Auth
  deleteDomain(condition: ModelDomainConditionInput, input: DeleteDomainInput!): Domain
  deleteFish(condition: ModelFishConditionInput, input: DeleteFishInput!): Fish
  deleteFly(condition: ModelFlyConditionInput, input: DeleteFlyInput!): Fly
  deleteGeneLollipopGraph(condition: ModelGeneLollipopGraphConditionInput, input: DeleteGeneLollipopGraphInput!): GeneLollipopGraph
  deleteGeneLollipopGraphMCF7(condition: ModelGeneLollipopGraphMCF7ConditionInput, input: DeleteGeneLollipopGraphMCF7Input!): GeneLollipopGraphMCF7
  deleteHomoSapiens(condition: ModelHomoSapiensConditionInput, input: DeleteHomoSapiensInput!): HomoSapiens
  deleteLollipopLocations(condition: ModelLollipopLocationsConditionInput, input: DeleteLollipopLocationsInput!): LollipopLocations
  deleteLollipopLocationsMCF7(condition: ModelLollipopLocationsMCF7ConditionInput, input: DeleteLollipopLocationsMCF7Input!): LollipopLocationsMCF7
  deleteLollipopLocationsMDAMB231(input: DeleteLollipopLocationsMDAMB231Input!): LollipopLocationsMDAMB231
  deleteMouse(condition: ModelMouseConditionInput, input: DeleteMouseInput!): Mouse
  deleteNematode(condition: ModelNematodeConditionInput, input: DeleteNematodeInput!): Nematode
  deletePlant(condition: ModelPlantConditionInput, input: DeletePlantInput!): Plant
  deleteRat(condition: ModelRatConditionInput, input: DeleteRatInput!): Rat
  deleteYeast(condition: ModelYeastConditionInput, input: DeleteYeastInput!): Yeast
  updateAlias(condition: ModelAliasConditionInput, input: UpdateAliasInput!): Alias
  updateAuth(condition: ModelAuthConditionInput, input: UpdateAuthInput!): Auth
  updateDomain(condition: ModelDomainConditionInput, input: UpdateDomainInput!): Domain
  updateFish(condition: ModelFishConditionInput, input: UpdateFishInput!): Fish
  updateFly(condition: ModelFlyConditionInput, input: UpdateFlyInput!): Fly
  updateGeneLollipopGraph(condition: ModelGeneLollipopGraphConditionInput, input: UpdateGeneLollipopGraphInput!): GeneLollipopGraph
  updateGeneLollipopGraphMCF7(condition: ModelGeneLollipopGraphMCF7ConditionInput, input: UpdateGeneLollipopGraphMCF7Input!): GeneLollipopGraphMCF7
  updateHomoSapiens(condition: ModelHomoSapiensConditionInput, input: UpdateHomoSapiensInput!): HomoSapiens
  updateLollipopLocations(condition: ModelLollipopLocationsConditionInput, input: UpdateLollipopLocationsInput!): LollipopLocations
  updateLollipopLocationsMCF7(condition: ModelLollipopLocationsMCF7ConditionInput, input: UpdateLollipopLocationsMCF7Input!): LollipopLocationsMCF7
  updateLollipopLocationsMDAMB231(input: UpdateLollipopLocationsMDAMB231Input!): LollipopLocationsMDAMB231
  updateMouse(condition: ModelMouseConditionInput, input: UpdateMouseInput!): Mouse
  updateNematode(condition: ModelNematodeConditionInput, input: UpdateNematodeInput!): Nematode
  updatePlant(condition: ModelPlantConditionInput, input: UpdatePlantInput!): Plant
  updateRat(condition: ModelRatConditionInput, input: UpdateRatInput!): Rat
  updateYeast(condition: ModelYeastConditionInput, input: UpdateYeastInput!): Yeast
}

type Nematode {
  aa_target: String
  chr: String
  codon: String
  createdAt: AWSDateTime!
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  updatedAt: AWSDateTime!
}

type Plant {
  aa_target: String
  chr: String
  codon: String
  createdAt: AWSDateTime!
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: AWSDateTime!
}

type Query {
  byAlias(alias: String, filter: ModelAliasFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelAliasConnection
  gene(filter: ModelHomoSapiensFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelHomoSapiensConnection
  geneFish(filter: ModelFishFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelFishConnection
  geneFly(filter: ModelFlyFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelFlyConnection
  geneMouse(filter: ModelMouseFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelMouseConnection
  geneNematode(filter: ModelNematodeFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelNematodeConnection
  genePlant(filter: ModelPlantFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelPlantConnection
  geneRat(filter: ModelRatFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelRatConnection
  geneYeast(filter: ModelYeastFilterInput, gene: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelYeastConnection
  getAlias(id: ID!): Alias
  getAuth(id: ID!): Auth
  getDomain(id: ID!): Domain
  getFish(id: ID!): Fish
  getFly(id: ID!): Fly
  getGeneLollipopGraph(id: ID!): GeneLollipopGraph
  getGeneLollipopGraphMCF7(id: ID!): GeneLollipopGraphMCF7
  getHomoSapiens(id: ID!): HomoSapiens
  getLollipopLocations(id: ID!): LollipopLocations
  getLollipopLocationsMCF7(id: ID!): LollipopLocationsMCF7
  getLollipopLocationsMDAMB231(id: ID!): LollipopLocationsMDAMB231
  getMouse(id: ID!): Mouse
  getNematode(id: ID!): Nematode
  getPlant(id: ID!): Plant
  getRat(id: ID!): Rat
  getYeast(id: ID!): Yeast
  listAliass(filter: ModelAliasFilterInput, limit: Int, nextToken: String): ModelAliasConnection
  listAuths(filter: ModelAuthFilterInput, limit: Int, nextToken: String): ModelAuthConnection
  listDomains(filter: ModelDomainFilterInput, limit: Int, nextToken: String): ModelDomainConnection
  listFishs(filter: ModelFishFilterInput, limit: Int, nextToken: String): ModelFishConnection
  listFlys(filter: ModelFlyFilterInput, limit: Int, nextToken: String): ModelFlyConnection
  listGeneLollipopGraphMCF7s(filter: ModelGeneLollipopGraphMCF7FilterInput, limit: Int, nextToken: String): ModelGeneLollipopGraphMCF7Connection
  listGeneLollipopGraphs(filter: ModelGeneLollipopGraphFilterInput, limit: Int, nextToken: String): ModelGeneLollipopGraphConnection
  listHomoSapienss(filter: ModelHomoSapiensFilterInput, limit: Int, nextToken: String): ModelHomoSapiensConnection
  listLollipopLocationsMCF7s(filter: ModelLollipopLocationsMCF7FilterInput, limit: Int, nextToken: String): ModelLollipopLocationsMCF7Connection
  listLollipopLocationsMDAMB231s(filter: TableLollipopLocationsMDAMB231FilterInput, limit: Int, nextToken: String): LollipopLocationsMDAMB231Connection
  listLollipopLocationss(filter: ModelLollipopLocationsFilterInput, limit: Int, nextToken: String): ModelLollipopLocationsConnection
  listMouses(filter: ModelMouseFilterInput, limit: Int, nextToken: String): ModelMouseConnection
  listNematodes(filter: ModelNematodeFilterInput, limit: Int, nextToken: String): ModelNematodeConnection
  listPlants(filter: ModelPlantFilterInput, limit: Int, nextToken: String): ModelPlantConnection
  listRats(filter: ModelRatFilterInput, limit: Int, nextToken: String): ModelRatConnection
  listYeasts(filter: ModelYeastFilterInput, limit: Int, nextToken: String): ModelYeastConnection
  newCancerType(cancer_type: String, filter: ModelHomoSapiensFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelHomoSapiensConnection
}

type Rat {
  aa_target: String
  chr: String
  codon: String
  createdAt: AWSDateTime!
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: AWSDateTime!
}

type Subscription {
  onCreateAlias: Alias @aws_subscribe(mutations : ["createAlias"])
  onCreateAuth: Auth @aws_subscribe(mutations : ["createAuth"])
  onCreateDomain: Domain @aws_subscribe(mutations : ["createDomain"])
  onCreateFish: Fish @aws_subscribe(mutations : ["createFish"])
  onCreateFly: Fly @aws_subscribe(mutations : ["createFly"])
  onCreateGeneLollipopGraph: GeneLollipopGraph @aws_subscribe(mutations : ["createGeneLollipopGraph"])
  onCreateGeneLollipopGraphMCF7: GeneLollipopGraphMCF7 @aws_subscribe(mutations : ["createGeneLollipopGraphMCF7"])
  onCreateHomoSapiens: HomoSapiens @aws_subscribe(mutations : ["createHomoSapiens"])
  onCreateLollipopLocations: LollipopLocations @aws_subscribe(mutations : ["createLollipopLocations"])
  onCreateLollipopLocationsMCF7: LollipopLocationsMCF7 @aws_subscribe(mutations : ["createLollipopLocationsMCF7"])
  onCreateLollipopLocationsMDAMB231(fdrUNT: String, gene: String, id: ID, lfcUNT: String, pvalueUNT: String): LollipopLocationsMDAMB231 @aws_subscribe(mutations : ["createLollipopLocationsMDAMB231"])
  onCreateMouse: Mouse @aws_subscribe(mutations : ["createMouse"])
  onCreateNematode: Nematode @aws_subscribe(mutations : ["createNematode"])
  onCreatePlant: Plant @aws_subscribe(mutations : ["createPlant"])
  onCreateRat: Rat @aws_subscribe(mutations : ["createRat"])
  onCreateYeast: Yeast @aws_subscribe(mutations : ["createYeast"])
  onDeleteAlias: Alias @aws_subscribe(mutations : ["deleteAlias"])
  onDeleteAuth: Auth @aws_subscribe(mutations : ["deleteAuth"])
  onDeleteDomain: Domain @aws_subscribe(mutations : ["deleteDomain"])
  onDeleteFish: Fish @aws_subscribe(mutations : ["deleteFish"])
  onDeleteFly: Fly @aws_subscribe(mutations : ["deleteFly"])
  onDeleteGeneLollipopGraph: GeneLollipopGraph @aws_subscribe(mutations : ["deleteGeneLollipopGraph"])
  onDeleteGeneLollipopGraphMCF7: GeneLollipopGraphMCF7 @aws_subscribe(mutations : ["deleteGeneLollipopGraphMCF7"])
  onDeleteHomoSapiens: HomoSapiens @aws_subscribe(mutations : ["deleteHomoSapiens"])
  onDeleteLollipopLocations: LollipopLocations @aws_subscribe(mutations : ["deleteLollipopLocations"])
  onDeleteLollipopLocationsMCF7: LollipopLocationsMCF7 @aws_subscribe(mutations : ["deleteLollipopLocationsMCF7"])
  onDeleteLollipopLocationsMDAMB231(fdrUNT: String, gene: String, id: ID, lfcUNT: String, pvalueUNT: String): LollipopLocationsMDAMB231 @aws_subscribe(mutations : ["deleteLollipopLocationsMDAMB231"])
  onDeleteMouse: Mouse @aws_subscribe(mutations : ["deleteMouse"])
  onDeleteNematode: Nematode @aws_subscribe(mutations : ["deleteNematode"])
  onDeletePlant: Plant @aws_subscribe(mutations : ["deletePlant"])
  onDeleteRat: Rat @aws_subscribe(mutations : ["deleteRat"])
  onDeleteYeast: Yeast @aws_subscribe(mutations : ["deleteYeast"])
  onUpdateAlias: Alias @aws_subscribe(mutations : ["updateAlias"])
  onUpdateAuth: Auth @aws_subscribe(mutations : ["updateAuth"])
  onUpdateDomain: Domain @aws_subscribe(mutations : ["updateDomain"])
  onUpdateFish: Fish @aws_subscribe(mutations : ["updateFish"])
  onUpdateFly: Fly @aws_subscribe(mutations : ["updateFly"])
  onUpdateGeneLollipopGraph: GeneLollipopGraph @aws_subscribe(mutations : ["updateGeneLollipopGraph"])
  onUpdateGeneLollipopGraphMCF7: GeneLollipopGraphMCF7 @aws_subscribe(mutations : ["updateGeneLollipopGraphMCF7"])
  onUpdateHomoSapiens: HomoSapiens @aws_subscribe(mutations : ["updateHomoSapiens"])
  onUpdateLollipopLocations: LollipopLocations @aws_subscribe(mutations : ["updateLollipopLocations"])
  onUpdateLollipopLocationsMCF7: LollipopLocationsMCF7 @aws_subscribe(mutations : ["updateLollipopLocationsMCF7"])
  onUpdateLollipopLocationsMDAMB231(fdrUNT: String, gene: String, id: ID, lfcUNT: String, pvalueUNT: String): LollipopLocationsMDAMB231 @aws_subscribe(mutations : ["updateLollipopLocationsMDAMB231"])
  onUpdateMouse: Mouse @aws_subscribe(mutations : ["updateMouse"])
  onUpdateNematode: Nematode @aws_subscribe(mutations : ["updateNematode"])
  onUpdatePlant: Plant @aws_subscribe(mutations : ["updatePlant"])
  onUpdateRat: Rat @aws_subscribe(mutations : ["updateRat"])
  onUpdateYeast: Yeast @aws_subscribe(mutations : ["updateYeast"])
}

type Yeast {
  aa_target: String
  chr: String
  codon: String
  createdAt: AWSDateTime!
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: AWSDateTime!
}

enum ModelAttributeTypes {
  _null
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
}

enum ModelSortDirection {
  ASC
  DESC
}

input CreateAliasInput {
  alias: String!
  gene: String
  id: String!
  speciesName: String
}

input CreateAuthInput {
  id: ID
}

input CreateDomainInput {
  accessionNumber: String
  color: String
  end: String
  gene: ID!
  id: ID
  identifier: String
  start: String
  type: String
}

input CreateFishInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input CreateFlyInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input CreateGeneLollipopGraphInput {
  id: ID
  numberOfAAS: String
  transcriptId: String!
  transcriptId2: String
}

input CreateGeneLollipopGraphMCF7Input {
  id: ID
  numberOfAAS: String
  transcriptId: String!
  transcriptId2: String
}

input CreateHomoSapiensInput {
  aa_target: String
  cancer_type: String
  chr: String
  codon: String
  createdAt: String
  gene: String!
  genome_coord: String!
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: String
}

input CreateLollipopLocationsInput {
  aachg: String
  aapos: String
  cellLine: String
  clinVar: String
  clinVar_ID: String
  fdrCISP: String
  fdrCPT: String
  fdrDOX: String
  fdrOLAP: String
  fdrUNT: String
  function: String!
  gene: ID!
  id: ID
  lfcCISP: String
  lfcCPT: String
  lfcDOX: String
  lfcOLAP: String
  lfcUNT: String
  noncanonicalTranscript: String
  pTMsiteLoc: String
  pvalueCISP: String
  pvalueCPT: String
  pvalueDOX: String
  pvalueOLAP: String
  pvalueUNT: String
  sgRNASequence: String
  tCGA: String
}

input CreateLollipopLocationsMCF7Input {
  aachg: String
  aapos: String
  cellLine: String
  clinVar: String
  clinVar_ID: String
  fdrCISP: String
  fdrCPT: String
  fdrDOX: String
  fdrOLAP: String
  fdrUNT: String
  function: String!
  gene: ID!
  id: ID
  lfcCISP: String
  lfcCPT: String
  lfcDOX: String
  lfcOLAP: String
  lfcUNT: String
  noncanonicalTranscript: String
  pTMsiteLoc: String
  pvalueCISP: String
  pvalueCPT: String
  pvalueDOX: String
  pvalueOLAP: String
  pvalueUNT: String
  sgRNASequence: String
  tCGA: String
}

input CreateLollipopLocationsMDAMB231Input {
  aapos: String
  clinVar: String
  fdrUNT: String
  function: String
  gene: String
  lfcUNT: String
  nLFC: String
  pvalueUNT: String
  sgRNASequence: String
}

input CreateMouseInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_cord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input CreateNematodeInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
}

input CreatePlantInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input CreateRatInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input CreateYeastInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input DeleteAliasInput {
  id: ID
}

input DeleteAuthInput {
  id: ID
}

input DeleteDomainInput {
  id: ID
}

input DeleteFishInput {
  id: ID
}

input DeleteFlyInput {
  id: ID
}

input DeleteGeneLollipopGraphInput {
  id: ID
}

input DeleteGeneLollipopGraphMCF7Input {
  id: ID
}

input DeleteHomoSapiensInput {
  id: ID
}

input DeleteLollipopLocationsInput {
  id: ID
}

input DeleteLollipopLocationsMCF7Input {
  id: ID
}

input DeleteLollipopLocationsMDAMB231Input {
  id: ID!
}

input DeleteMouseInput {
  id: ID
}

input DeleteNematodeInput {
  id: ID
}

input DeletePlantInput {
  id: ID
}

input DeleteRatInput {
  id: ID
}

input DeleteYeastInput {
  id: ID
}

input ModelAliasConditionInput {
  alias: ModelStringInput
  and: [ModelAliasConditionInput]
  gene: ModelStringInput
  not: ModelAliasConditionInput
  or: [ModelAliasConditionInput]
  speciesName: ModelStringInput
}

input ModelAliasFilterInput {
  alias: ModelStringInput
  and: [ModelAliasFilterInput]
  gene: ModelStringInput
  id: ModelStringInput
  not: ModelAliasFilterInput
  or: [ModelAliasFilterInput]
  speciesName: ModelStringInput
}

input ModelAuthConditionInput {
  and: [ModelAuthConditionInput]
  not: ModelAuthConditionInput
  or: [ModelAuthConditionInput]
}

input ModelAuthFilterInput {
  and: [ModelAuthFilterInput]
  id: ModelIDInput
  not: ModelAuthFilterInput
  or: [ModelAuthFilterInput]
}

input ModelBooleanInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  eq: Boolean
  ne: Boolean
}

input ModelDomainConditionInput {
  accessionNumber: ModelStringInput
  and: [ModelDomainConditionInput]
  color: ModelStringInput
  end: ModelStringInput
  gene: ModelIDInput
  identifier: ModelStringInput
  not: ModelDomainConditionInput
  or: [ModelDomainConditionInput]
  start: ModelStringInput
  type: ModelStringInput
}

input ModelDomainFilterInput {
  accessionNumber: ModelStringInput
  and: [ModelDomainFilterInput]
  color: ModelStringInput
  end: ModelStringInput
  gene: ModelIDInput
  id: ModelIDInput
  identifier: ModelStringInput
  not: ModelDomainFilterInput
  or: [ModelDomainFilterInput]
  start: ModelStringInput
  type: ModelStringInput
}

input ModelFishConditionInput {
  aa_target: ModelStringInput
  and: [ModelFishConditionInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelFishConditionInput
  or: [ModelFishConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelFishFilterInput {
  aa_target: ModelStringInput
  and: [ModelFishFilterInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelFishFilterInput
  or: [ModelFishFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelFloatInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input ModelFlyConditionInput {
  aa_target: ModelStringInput
  and: [ModelFlyConditionInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelFlyConditionInput
  or: [ModelFlyConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelFlyFilterInput {
  aa_target: ModelStringInput
  and: [ModelFlyFilterInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelFlyFilterInput
  or: [ModelFlyFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelGeneLollipopGraphConditionInput {
  and: [ModelGeneLollipopGraphConditionInput]
  not: ModelGeneLollipopGraphConditionInput
  numberOfAAS: ModelStringInput
  or: [ModelGeneLollipopGraphConditionInput]
  transcriptId: ModelStringInput
  transcriptId2: ModelStringInput
}

input ModelGeneLollipopGraphFilterInput {
  and: [ModelGeneLollipopGraphFilterInput]
  id: ModelIDInput
  not: ModelGeneLollipopGraphFilterInput
  numberOfAAS: ModelStringInput
  or: [ModelGeneLollipopGraphFilterInput]
  transcriptId: ModelStringInput
  transcriptId2: ModelStringInput
}

input ModelGeneLollipopGraphMCF7ConditionInput {
  and: [ModelGeneLollipopGraphMCF7ConditionInput]
  not: ModelGeneLollipopGraphMCF7ConditionInput
  numberOfAAS: ModelStringInput
  or: [ModelGeneLollipopGraphMCF7ConditionInput]
  transcriptId: ModelStringInput
  transcriptId2: ModelStringInput
}

input ModelGeneLollipopGraphMCF7FilterInput {
  and: [ModelGeneLollipopGraphMCF7FilterInput]
  id: ModelIDInput
  not: ModelGeneLollipopGraphMCF7FilterInput
  numberOfAAS: ModelStringInput
  or: [ModelGeneLollipopGraphMCF7FilterInput]
  transcriptId: ModelStringInput
  transcriptId2: ModelStringInput
}

input ModelHomoSapiensConditionInput {
  aa_target: ModelStringInput
  and: [ModelHomoSapiensConditionInput]
  cancer_type: ModelStringInput
  chr: ModelStringInput
  codon: ModelStringInput
  createdAt: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelHomoSapiensConditionInput
  or: [ModelHomoSapiensConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
  updatedAt: ModelStringInput
}

input ModelHomoSapiensFilterInput {
  aa_target: ModelStringInput
  and: [ModelHomoSapiensFilterInput]
  cancer_type: ModelStringInput
  chr: ModelStringInput
  codon: ModelStringInput
  createdAt: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelHomoSapiensFilterInput
  or: [ModelHomoSapiensFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
  updatedAt: ModelStringInput
}

input ModelIDInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input ModelIntInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelLollipopLocationsConditionInput {
  aachg: ModelStringInput
  aapos: ModelStringInput
  and: [ModelLollipopLocationsConditionInput]
  cellLine: ModelStringInput
  clinVar: ModelStringInput
  clinVar_ID: ModelStringInput
  fdrCISP: ModelStringInput
  fdrCPT: ModelStringInput
  fdrDOX: ModelStringInput
  fdrOLAP: ModelStringInput
  fdrUNT: ModelStringInput
  function: ModelStringInput
  gene: ModelIDInput
  lfcCISP: ModelStringInput
  lfcCPT: ModelStringInput
  lfcDOX: ModelStringInput
  lfcOLAP: ModelStringInput
  lfcUNT: ModelStringInput
  noncanonicalTranscript: ModelStringInput
  not: ModelLollipopLocationsConditionInput
  or: [ModelLollipopLocationsConditionInput]
  pTMsiteLoc: ModelStringInput
  pvalueCISP: ModelStringInput
  pvalueCPT: ModelStringInput
  pvalueDOX: ModelStringInput
  pvalueOLAP: ModelStringInput
  pvalueUNT: ModelStringInput
  sgRNASequence: ModelStringInput
  tCGA: ModelStringInput
}

input ModelLollipopLocationsFilterInput {
  aachg: ModelStringInput
  aapos: ModelStringInput
  and: [ModelLollipopLocationsFilterInput]
  cellLine: ModelStringInput
  clinVar: ModelStringInput
  clinVar_ID: ModelStringInput
  fdrCISP: ModelStringInput
  fdrCPT: ModelStringInput
  fdrDOX: ModelStringInput
  fdrOLAP: ModelStringInput
  fdrUNT: ModelStringInput
  function: ModelStringInput
  gene: ModelIDInput
  id: ModelIDInput
  lfcCISP: ModelStringInput
  lfcCPT: ModelStringInput
  lfcDOX: ModelStringInput
  lfcOLAP: ModelStringInput
  lfcUNT: ModelStringInput
  noncanonicalTranscript: ModelStringInput
  not: ModelLollipopLocationsFilterInput
  or: [ModelLollipopLocationsFilterInput]
  pTMsiteLoc: ModelStringInput
  pvalueCISP: ModelStringInput
  pvalueCPT: ModelStringInput
  pvalueDOX: ModelStringInput
  pvalueOLAP: ModelStringInput
  pvalueUNT: ModelStringInput
  sgRNASequence: ModelStringInput
  tCGA: ModelStringInput
}

input ModelLollipopLocationsMCF7ConditionInput {
  aachg: ModelStringInput
  aapos: ModelStringInput
  and: [ModelLollipopLocationsMCF7ConditionInput]
  cellLine: ModelStringInput
  clinVar: ModelStringInput
  clinVar_ID: ModelStringInput
  fdrCISP: ModelStringInput
  fdrCPT: ModelStringInput
  fdrDOX: ModelStringInput
  fdrOLAP: ModelStringInput
  fdrUNT: ModelStringInput
  function: ModelStringInput
  gene: ModelIDInput
  lfcCISP: ModelStringInput
  lfcCPT: ModelStringInput
  lfcDOX: ModelStringInput
  lfcOLAP: ModelStringInput
  lfcUNT: ModelStringInput
  noncanonicalTranscript: ModelStringInput
  not: ModelLollipopLocationsMCF7ConditionInput
  or: [ModelLollipopLocationsMCF7ConditionInput]
  pTMsiteLoc: ModelStringInput
  pvalueCISP: ModelStringInput
  pvalueCPT: ModelStringInput
  pvalueDOX: ModelStringInput
  pvalueOLAP: ModelStringInput
  pvalueUNT: ModelStringInput
  sgRNASequence: ModelStringInput
  tCGA: ModelStringInput
}

input ModelLollipopLocationsMCF7FilterInput {
  aachg: ModelStringInput
  aapos: ModelStringInput
  and: [ModelLollipopLocationsMCF7FilterInput]
  cellLine: ModelStringInput
  clinVar: ModelStringInput
  clinVar_ID: ModelStringInput
  fdrCISP: ModelStringInput
  fdrCPT: ModelStringInput
  fdrDOX: ModelStringInput
  fdrOLAP: ModelStringInput
  fdrUNT: ModelStringInput
  function: ModelStringInput
  gene: ModelIDInput
  id: ModelIDInput
  lfcCISP: ModelStringInput
  lfcCPT: ModelStringInput
  lfcDOX: ModelStringInput
  lfcOLAP: ModelStringInput
  lfcUNT: ModelStringInput
  noncanonicalTranscript: ModelStringInput
  not: ModelLollipopLocationsMCF7FilterInput
  or: [ModelLollipopLocationsMCF7FilterInput]
  pTMsiteLoc: ModelStringInput
  pvalueCISP: ModelStringInput
  pvalueCPT: ModelStringInput
  pvalueDOX: ModelStringInput
  pvalueOLAP: ModelStringInput
  pvalueUNT: ModelStringInput
  sgRNASequence: ModelStringInput
  tCGA: ModelStringInput
}

input ModelMouseConditionInput {
  aa_target: ModelStringInput
  and: [ModelMouseConditionInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_cord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelMouseConditionInput
  or: [ModelMouseConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelMouseFilterInput {
  aa_target: ModelStringInput
  and: [ModelMouseFilterInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_cord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelMouseFilterInput
  or: [ModelMouseFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelNematodeConditionInput {
  aa_target: ModelStringInput
  and: [ModelNematodeConditionInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelNematodeConditionInput
  or: [ModelNematodeConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
}

input ModelNematodeFilterInput {
  aa_target: ModelStringInput
  and: [ModelNematodeFilterInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelNematodeFilterInput
  or: [ModelNematodeFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
}

input ModelPlantConditionInput {
  aa_target: ModelStringInput
  and: [ModelPlantConditionInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelPlantConditionInput
  or: [ModelPlantConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelPlantFilterInput {
  aa_target: ModelStringInput
  and: [ModelPlantFilterInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelPlantFilterInput
  or: [ModelPlantFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelRatConditionInput {
  aa_target: ModelStringInput
  and: [ModelRatConditionInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelRatConditionInput
  or: [ModelRatConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelRatFilterInput {
  aa_target: ModelStringInput
  and: [ModelRatFilterInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelRatFilterInput
  or: [ModelRatFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelStringInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input ModelYeastConditionInput {
  aa_target: ModelStringInput
  and: [ModelYeastConditionInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelYeastConditionInput
  or: [ModelYeastConditionInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input ModelYeastFilterInput {
  aa_target: ModelStringInput
  and: [ModelYeastFilterInput]
  chr: ModelStringInput
  codon: ModelStringInput
  gene: ModelStringInput
  genome_coord: ModelStringInput
  id: ModelStringInput
  n_tx_in_gene: ModelStringInput
  no_upstream_G: ModelStringInput
  not: ModelYeastFilterInput
  or: [ModelYeastFilterInput]
  percent_NMD: ModelStringInput
  percent_tx: ModelStringInput
  rFLP_Gain: ModelStringInput
  rFLP_Loss: ModelStringInput
  rel_pos_largest_isoform: ModelStringInput
  sgNGA: ModelStringInput
  sgNGAG: ModelStringInput
  sgNGAG_matches: ModelStringInput
  sgNGAG_spacing: ModelStringInput
  sgNGA_matches: ModelStringInput
  sgNGA_spacing: ModelStringInput
  sgNGCG: ModelStringInput
  sgNGCG_matches: ModelStringInput
  sgNGCG_spacing: ModelStringInput
  sgNGG: ModelStringInput
  sgNGG_matches: ModelStringInput
  sgNGG_spacing: ModelStringInput
  sgNNGRRT: ModelStringInput
  sgNNGRRT_matches: ModelStringInput
  sgNNGRRT_spacing: ModelStringInput
  sgNNNRRT: ModelStringInput
  sgNNNRRT_matches: ModelStringInput
  sgNNNRRT_spacing: ModelStringInput
  strand: ModelStringInput
}

input TableBooleanFilterInput {
  attributeExists: Boolean
  eq: Boolean
  ne: Boolean
}

input TableFloatFilterInput {
  attributeExists: Boolean
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input TableIDFilterInput {
  attributeExists: Boolean
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input TableIntFilterInput {
  attributeExists: Boolean
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input TableLollipopLocationsMDAMB231FilterInput {
  aapos: TableStringFilterInput
  clinVar: TableStringFilterInput
  fdrUNT: TableStringFilterInput
  function: TableStringFilterInput
  gene: TableStringFilterInput
  id: TableIDFilterInput
  lfcUNT: TableStringFilterInput
  nLFC: TableStringFilterInput
  pvalueUNT: TableStringFilterInput
  sgRNASequence: TableStringFilterInput
}

input TableStringFilterInput {
  attributeExists: Boolean
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input UpdateAliasInput {
  alias: String
  gene: String
  id: String!
  speciesName: String
}

input UpdateAuthInput {
  id: ID!
}

input UpdateDomainInput {
  accessionNumber: String
  color: String
  end: String
  gene: ID
  id: ID!
  identifier: String
  start: String
  type: String
}

input UpdateFishInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input UpdateFlyInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input UpdateGeneLollipopGraphInput {
  id: ID!
  numberOfAAS: String
  transcriptId: String
  transcriptId2: String
}

input UpdateGeneLollipopGraphMCF7Input {
  id: ID!
  numberOfAAS: String
  transcriptId: String
  transcriptId2: String
}

input UpdateHomoSapiensInput {
  aa_target: String
  cancer_type: String
  chr: String
  codon: String
  createdAt: String
  gene: String
  genome_coord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
  updatedAt: String
}

input UpdateLollipopLocationsInput {
  aachg: String
  aapos: String
  cellLine: String
  clinVar: String
  clinVar_ID: String
  fdrCISP: String
  fdrCPT: String
  fdrDOX: String
  fdrOLAP: String
  fdrUNT: String
  function: String
  gene: ID
  id: ID!
  lfcCISP: String
  lfcCPT: String
  lfcDOX: String
  lfcOLAP: String
  lfcUNT: String
  noncanonicalTranscript: String
  pTMsiteLoc: String
  pvalueCISP: String
  pvalueCPT: String
  pvalueDOX: String
  pvalueOLAP: String
  pvalueUNT: String
  sgRNASequence: String
  tCGA: String
}

input UpdateLollipopLocationsMCF7Input {
  aachg: String
  aapos: String
  cellLine: String
  clinVar: String
  clinVar_ID: String
  fdrCISP: String
  fdrCPT: String
  fdrDOX: String
  fdrOLAP: String
  fdrUNT: String
  function: String
  gene: ID
  id: ID!
  lfcCISP: String
  lfcCPT: String
  lfcDOX: String
  lfcOLAP: String
  lfcUNT: String
  noncanonicalTranscript: String
  pTMsiteLoc: String
  pvalueCISP: String
  pvalueCPT: String
  pvalueDOX: String
  pvalueOLAP: String
  pvalueUNT: String
  sgRNASequence: String
  tCGA: String
}

input UpdateLollipopLocationsMDAMB231Input {
  aapos: String
  clinVar: String
  fdrUNT: String
  function: String
  gene: String
  id: ID!
  lfcUNT: String
  nLFC: String
  pvalueUNT: String
  sgRNASequence: String
}

input UpdateMouseInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_cord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input UpdateNematodeInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
}

input UpdatePlantInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input UpdateRatInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}

input UpdateYeastInput {
  aa_target: String
  chr: String
  codon: String
  gene: String
  genome_coord: String
  id: String!
  n_tx_in_gene: String
  no_upstream_G: String
  percent_NMD: String
  percent_tx: String
  rFLP_Gain: String
  rFLP_Loss: String
  rel_pos_largest_isoform: String
  sgNGA: String
  sgNGAG: String
  sgNGAG_matches: String
  sgNGAG_spacing: String
  sgNGA_matches: String
  sgNGA_spacing: String
  sgNGCG: String
  sgNGCG_matches: String
  sgNGCG_spacing: String
  sgNGG: String
  sgNGG_matches: String
  sgNGG_spacing: String
  sgNNGRRT: String
  sgNNGRRT_matches: String
  sgNNGRRT_spacing: String
  sgNNNRRT: String
  sgNNNRRT_matches: String
  sgNNNRRT_spacing: String
  strand: String
}
